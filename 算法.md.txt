# 二分查找

假设本题给定数组为[1,3,4,6,8,9,13,16,20,25]，输入一个数x，使用二分查找的方法在给定数组中对其进行查找，若找到返回x的位置（索引），否则返回-1。
输入：需要查找的数x
输出：x的位置或者-1
分析：
首先，数组中元素按升序（降序）排列是二分查找的必要条件，二分查找首先需要将数组中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。

```c
#include <iostream>
using namespace std;
int main()
{
    int a[10]={1,3,4,6,8,9,13,16,20,25};
    int x;
    cin>>x;
    int left=0; //初始化到最左端
    int right=10-1;   //初始化到最又端
    while(left<=right){
        int middle=(left+right)/2;
        if(a[middle]==x)
        {   //查找成功
            cout<<middle;
            return middle;
        }
        if(x>a[middle])
        {   //x大于中间值，说明查找范围在中间值右边，左端点靠过来
            left=middle+1;
        }else
        {   //x小于中间值，说明查找范围在中间值左边，右端点靠过来
            right=middle-1;
        }
    }
    cout<<-1;
    return 0;
}
```

